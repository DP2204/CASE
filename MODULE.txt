Good afternoon everyone,
I’m Dhruv Panchal, a developer from the GBIT ISPL Trade – DPP Conserto team, Mumbai.
Over the past six months, I’ve been fortunate to contribute to one of the key projects within Trade Finance — the Conserto application.


---

🏗️ Project Overview (≈1–1.5 min)

Conserto is an Electronic Document Management and Workflow Management tool that connects the Middle Office and Back Office teams, handling customer trade requests like Letters of Credit and Collections.

It integrates several core microservices —

Camunda BPM for workflow orchestration,

DocStore for document and annotation management, and

Referential Data Service for real-time data retrieval.


When I joined, Conserto was already a mature, live product — used globally for over three years.
That’s exactly when a new and exciting initiative began — the Track & Trace feature, aimed at improving the visibility of trade events throughout their entire lifecycle.

And that’s where my journey began — I got the opportunity to work on this module right from scratch.


---

💻 My Contribution (≈2–2.5 min)

My major contribution was building the Track & Trace Mapping module, which forms the backbone of this feature.
I developed the backend logic using Java, Spring Boot, and JPA Specifications, integrating with PostgreSQL and OpenAPI.

The goal was to enable intelligent mapping between trade events — automating how transactions flow between Connexis and iVision.

Technically, I implemented a custom RSQL-based filtering system, allowing users to query trade data dynamically using flexible parameters.
I also used a PriorityQueue and Comparator-based logic to ensure that when multiple records matched, the system would automatically select the most relevant mapping — based on predefined business rules.

Additionally, I implemented wildcard and null-safe handling, ensuring no request ever failed because of partial or incomplete data.
This made the API far more resilient and business-friendly.

Once my API logic was stable, I was responsible for testing and CI/CD deployment — working closely with the SRE team using Jenkins to validate builds, monitor logs, and ensure smooth production rollout.
I also prepared unit tests to maintain stability and traceability in future enhancements.

But my contribution didn’t stop at the backend.
I was also involved in enhancing the frontend experience for the Courier Partner feature, a new screen introduced under Track & Trace.

Here, I worked on the Angular-based interface, which allowed users to enter and track Courier Partner and Waybill numbers (like DHL references).
I integrated backend APIs with frontend form controls, handled validation logic, and ensured role-based access permissions were respected.
It was a great experience seeing how backend and frontend connect to deliver a complete user journey.

Together, these contributions made the Track & Trace module more interactive, automated, and reliable — improving operational transparency for teams across multiple regions.

Tech Stack Used:
Java | Spring Boot | JPA Specifications | RSQL | SQL | OpenAPI | Angular | Jenkins | Git | Bitbucket


---

🌱 Result & Reflection (≈40 sec)

The Track & Trace enhancements helped automate complex workflows and gave our teams clear visibility over trade transactions — saving time and reducing manual dependency.
For me, the best moment was seeing something I built go live and actually make life easier for end users — that’s a different kind of happiness!


---

🙌 Conclusion & Gratitude (≈1 min)

Looking back, I realize this internship was not just about writing code — it was about learning how things connect: technology, process, and people.

We all came from different mindsets and technical backgrounds, but our mentors and managers created an environment that made learning natural.
They were always approachable — whether it was a technical blocker or a design doubt — and ensured we were never left out.
Their constant guidance, daily sync calls, and feedback helped me grow from a learner into a more confident developer.

This journey taught me that in corporate life, learning never stops — it just changes direction every day.
And I’m still climbing that mountain, one line of code at a time.
“Thank you all for guiding, supporting, and helping me turn every challenge into a chance to learn something new.




Good afternoon everyone,
I’m Dhruv Panchal, and today I’d like to share my 6-month journey with BNP Paribas — a journey that started with curiosity, grew through collaboration, and shaped into something I’m truly proud of: my work on the Track and Trace functionality within the Conserto Application.

When I joined, I came across Conserto, an application that has already been live for around three years. It’s a core part of Trade Finance, designed to organize and streamline customer requests across both Middle Office and Back Office operations through iVision — or as we call it, IGS (iVision Global Services).

Conserto isn’t just another app — it’s a Workflow and Electronic Document Management system that ensures every trade transaction, like Letters of Credit and Collections, moves smoothly through its lifecycle. It integrates with multiple microservices — like BPM (Camunda) for workflow orchestration, DocStore for managing documents, and Referential Data Service for real-time information retrieval.


---

🌱 The Beginning – My Role and Challenge

When I joined, the Track & Trace feature had just started taking shape. It was an exciting opportunity because I got to work from the very beginning of this module — right from understanding the business requirement to implementing and testing it technically.

This module’s goal was to map and trace trade events throughout their journey — connecting systems like Connexis, SWIFT, and iVision, and ensuring both the customer and internal teams could see every step of a transaction in real time.


---

⚙️ My Technical Contribution

Now coming to my main contribution — I worked on the Track & Trace Mapping module and related functionalities.

This involved:

Designing and implementing the ExtTrackAndTraceMapping API — which dynamically retrieves and filters trade data using Spring Boot, JPA Specifications, and a custom RSQL parser for flexible querying.

Implementing priority-based logic with Comparator and PriorityQueue to ensure the most relevant mapping record is always selected based on business rules.

Adding wildcard and null-safe filtering to handle real-world data inconsistencies.


I also integrated it with Referential data services and made sure the API handled all five mandatory parameters and four optional ones gracefully — maintaining both performance and accuracy.


---

📦 The Courier Partner Enhancement

Later, I contributed to the Courier Partner module, which allowed users to input and track courier details — such as the DHL tracker number or courier reference — directly from the Conserto interface.

Here, I worked on both the front-end interaction logic and back-end API integration, ensuring proper validation rules (like max 25 characters, format restrictions, and permission control).
This feature improved transparency between trade operations and logistics teams — a small but powerful step towards a fully connected workflow.


---

💡 Automation and Deployment

One of my biggest learnings came from the automation and deployment side.
After completing development, I was responsible for testing the service in Jenkins — validating build success, ensuring test cases passed, and confirming data flow through all dependent microservices.

Once validated, we moved to UAT and production deployment, collaborating with the SRE (Site Reliability Engineering) team to ensure stability and rollback safety.
This hands-on exposure taught me the importance of CI/CD pipelines, error monitoring, and log tracking — crucial for any live banking system.


---

🧠 Tech Stack and Tools

Throughout this project, I worked with:

Java & Spring Boot for backend API development

JPA & Specifications for database querying

RSQL parser for dynamic filtering

Swagger & OpenAPI for interface contracts

Jenkins for CI/CD integration

Git & Bitbucket for version control

SQL & Postman for testing



---

🚀 Reflection and Future Vision

Looking back, I feel fortunate that I joined when Track & Trace was still at its foundation stage — it gave me the chance to build something from scratch, understand its architecture, and see how it fits into a global-scale application like Conserto.

Working with a live production system that supports multiple regions — FRB, FORTIS, CBE, MEA, and APAC — taught me how even a single API or a validation rule can impact users across continents.

As I look forward, I aim to take more ownership of independent modules, continue contributing to Trade Finance digitalization, and apply the same passion and precision that shaped my first six months here.


---

✨ Closing

In short, my journey was not just about coding — it was about connecting business needs with technology, about ensuring every small enhancement improves someone’s workflow somewhere in the world.

Thank you BNP Paribas, for giving me this opportunity to grow, learn, and contribute to something that truly matters.



------------------------------------------

During my internship at GM IT APS, I worked on the Picasso application, which was deployed on a WebLogic server. Initially, the deployment process for the WAR file was completely manual, involving multiple steps that had to be performed carefully in a specific order.

The process began with accessing the WebLogic console through CyberArk for secure login. Before deploying a new WAR file, we first had to stop all the slave nodes from the server to avoid any conflicts during deployment. Once the environment was prepared, we navigated to the WebLogic Administration Console, clicked on “Lock and Edit”, and proceeded to the Deployments section. From there, we selected the Install option, uploaded the latest WAR file, and installed it as an application.

After installation, it was necessary to target the deployment to the correct cluster, activate the changes, and then start all the WebLogic nodes again. Finally, we would verify if the application started successfully and was accessible. This entire manual procedure was time-consuming and prone to human errors, especially during frequent deployments.

To overcome these challenges, we worked on automating the deployment process using Jenkins and Ansible. We created Ansible roles and tasks to handle steps such as stopping and starting nodes, uploading the WAR file, deploying it to the correct cluster, and verifying the deployment status. A Jenkins pipeline was then designed to orchestrate this automation — integrating with Ansible to execute tasks sequentially and ensure a smooth deployment flow.
This automation not only reduced deployment time significantly but also minimized manual intervention and errors, making the overall process more reliable and efficient. Through this project, I gained hands-on experience with DevOps tools like Jenkins and Ansible, and also developed a strong understanding of WebLogic server management and CI/CD pipeline implementation.


-----------------------

During my internship, my primary contribution was on the Track and Trace functionality of the Conserto application — a feature designed to provide visibility and traceability of trade events across different stages. I worked on enhancing the automation logic, ensuring that each event and its status could be accurately tracked within the workflow.

To achieve this, I implemented the Auto IS mapping logic, which automatically links internal statuses between systems, reducing manual intervention and improving data consistency. This involved understanding complex trade event lifecycles, working closely with both the backend (Spring Boot) and frontend (Angular), and ensuring seamless integration within Conserto’s existing workflow.



One of the major highlights of my internship journey was the Leaders Connect sessions — moments where learning went beyond slides and turned into meaningful conversations with senior leaders of the organization. Each session offered valuable insights into leadership, innovation, and growth, giving us a glimpse of how strategic decisions are made and how technology continues to drive transformation across the company. Another memorable experience was the Speed Meet, where we got the opportunity to interact with eight leaders, each for ten minutes. It was my first time attending such a session, and it turned out to be one of the most engaging and inspiring parts of the internship. The format encouraged open conversations and quick yet impactful exchanges, allowing us to learn from each leader’s journey in a unique way. During this session, Baig Mirza Abid shared a piece of advice that truly stayed with me. He said, “The first two to three years are all about hard work. Don’t divert yourself — focus on one thing and become an expert at it.” That line really hit me, because it perfectly captured what the early years of our career should be about — staying focused, building expertise, and laying a strong foundation for long-term growth




I’ll be honest — I walked into the hackathon both nervous and excited. Nervous because I had no idea what exactly we were going to build, and excited because it was our first 24 hours in the company — with good food, fun games, and of course, free Wi-Fi! 😄 But it wasn’t only about coding — the organizers even arranged games and stand-up comedy sessions, which added so much freshness and energy. What made it even more interesting was working with a completely new group of people — folks I had never met before. Soon, strangers became teammates, we divided the work, ideas started flowing, and the real hackathon spirit kicked in — creativity, caffeine, and chaos. Truly, an unforgettable experience!


Moving from campus to corporate felt like stepping into a whole new world. In college, we chased grades and deadlines; in the corporate world, we chase results and growth. The first few weeks were a mix of excitement and confusion — new tools, new faces, and endless meetings! Back in college, we used to study only at the end — just before exams. But here, every day feels like a new exam — with new tasks, new learning, and new challenges.

What really helped was how the organizers arranged various training sessions. They set a perfect roadmap that guided us from academic habits to professional skills. In campus, we focused on projects, assignments, and attendance; but in corporate, it’s about structure, ownership, and confidence — something that builds day by day. The sessions were practical, interactive, and gave us a new mindset — one that truly fits the professional world. Slowly, I realized this journey isn’t about leaving college behind; it’s about continuing to learn — just with ID cards instead of admit cards.




My role right now is as a Full Stack Developer — working with Java and Angular. In the beginning, I was assigned a small task that involved the team’s entire tech stack. Coming from a Python background, I had to learn everything from scratch. I spent extra hours exploring, trying, failing, and learning — and that’s when I realized growth here is like climbing a mountain. And honestly, I’m still on that trek!

Team learning and setting up wasn’t easy for me at first. But the environment that my team and the organization created was so warm and supportive that anyone could easily adapt and start learning. Every day brings a new step, a new view, and a new challenge. I’ve learned that learning never stops — never ever stops — it just changes direction every day. But no matter where it turns, you just keep climbing.




This has been one of the most important parts of my journey — the constant support from our managers and mentors. They always kept us engaged and made sure no one ever felt left out, whether in the team or in the workspace. The training sessions they planned were not just helpful, but truly well-structured and interactive. Because of them, fun and work both stayed perfectly balanced.

Our daily calls helped us stay on track and see how we were progressing with our tasks. What I really appreciate is how approachable they’ve always been — whether it’s a technical doubt, a project challenge, or even something personal, they’re always ready to guide us. Their support made this learning journey smoother, motivating, and full of confidence.

